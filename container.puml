@startuml container
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

Person(user, "Traveler")
Container(lb, "Load Balancer", "HTTPS, round-robin")

System(webapp, "Web UI")

System_Boundary(system, "Traveler Social Network") {
    Container(gateway, "Gateway", "go", "Auth, Rate limit, cache, proxy etc.")
    ContainerDb(gateway_db, "TokenBucket", "Redis")
    Container(auth, "Auth", "go", "session-based")
    ContainerDb(auth_db, "DB", "Redis")
    ContainerDb(users_db, "DB", "Postgres")
    Container(images, "Images", "go")
    ContainerDb(images_db, "DB", "MongoDB")
    ContainerDb(images_blob, "Blob", "S3")
    Container(posts, "Posts", "go")
    ContainerDb(posts_db, "DB", "MongoDB")
    Container(locations, "Locations", "go")
    ContainerDb(locations_db, "DB", "Neo4j")
    Container(posts_api, "Post API", "go", "Business Logic")
    Container(comments, "Comments", "go")
    ContainerDb(comments_db, "DB", "MongoDB")
    Container(follow, "Follow", "go")
    Container(follow_db, "DB", "Neo4j")
    Container(feed, "Feed", "go")
    ContainerQueue(feed_t, "Feed Topic", "kafka")
    ContainerDb(feed_db, "DB", "MongoDB")
    Container(user_api, "User API", "go", "Business Logic")
    Container(users, "Users", "go")
}
Container_Ext(cdn, "CDN")

Rel(user, lb, "HTTPS")
Rel(user, cdn, "static, media")
Rel(lb, webapp, "Interract with travelers, posts, comments, etc.")
Rel(webapp, gateway, "HTTPS, Rest API")
Rel(gateway, auth, "sign-up, sign-in, etc", "gRPC")
Rel_R(gateway, images, "upload, download", "gRPC")
Rel(gateway, gateway_db, "limits")
Rel(gateway, posts_api, "CRUD", "gRPC")
Rel(gateway, user_api, "CRUD", "gRPC")
Rel(auth, auth_db, "store sessions")
Rel(images, images_db, "store metadata")
Rel(images, images_blob, "store blob")
Rel(cdn, images_blob, "pull")
Rel(posts_api, posts, "CRUD", "gRPC")
Rel(posts_api, locations, "CRUD", "gRPC")
Rel(posts_api, comments, "CRUD", "gRPC")
Rel(posts_api, user_api, "user data", "gRPC")
Rel(posts_api, feed, "CRUD", "gRPC")
Rel(posts_api, feed_t, "push")
Rel(posts, posts_db, "store")
Rel(locations, locations_db, "store")
Rel(comments, comments_db, "store")
Rel(follow, follow_db, "store")
Rel(user_api, follow, "CRUD", "gRPC")
Rel(user_api, users, "CRUD", "gRPC")
Rel(users, users_db, "store")
Rel(feed, feed_db, "store")
Rel_L(feed, feed_t, "pull")

@enduml